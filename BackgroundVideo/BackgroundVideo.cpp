// BackgroundVideo.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <opencv2/opencv.hpp>
#include <iostream>
#include <stdio.h>


using namespace cv;
using namespace std;


int main()
{
	VideoCapture cap("../data/dog.mp4"); // open the default camera
	if (!cap.isOpened())
	{
		std::cout << "!!! Failed to open file: ./data/dog.mp4";
		return -1;
	}

	Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
	Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor

	pMOG2 = createBackgroundSubtractorMOG2(); //MOG2 approach

	cv::Mat frame;
	for (;;)
	{
		if (!cap.read(frame))
			break;

		pMOG2->apply(frame, fgMaskMOG2);

		int erosion_size = 2;
		Mat element = getStructuringElement(MORPH_ERODE,
			cv::Size(2 * erosion_size + 1, 2 * erosion_size + 1),
			cv::Point(erosion_size, erosion_size));

		// Apply erosion or dilation on the image
		erode(fgMaskMOG2, fgMaskMOG2, element);
		dilate(fgMaskMOG2, fgMaskMOG2,element);

		Mat masked;
		frame.setTo(Scalar(0, 0, 255), fgMaskMOG2);
		//frame.copyTo(masked, fgMaskMOG2);
		imshow("window", frame);
		char key = cvWaitKey(10);
		if (key == 27) // ESC
			break;
	}

	return 0;
}

